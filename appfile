#Shiny Infectious Disease Modeling

#load the required packages
library(shiny)
library(shinydashboard)
library(shinyBS)
library(magrittr)
library(tidyverse)
library(rmarkdown)
library(plotly)
library(DT)
library(shinyWidgets)
library(shinycssloaders)
library(deSolve)

# Define UI for application that draws a histogram
ui<-dashboardPage(
  dashboardHeader(title="Simulating Infectious Diseases Dynamics"),
  
  dashboardSidebar(
    hr(),
    sidebarMenu(id = "menu",
                menuItem("Home", tabName = "home", icon = icon("home")),
                menuItem("Simulate Disease Dynamics", tabName = "exp-model", icon = icon("chart-line"), selected = TRUE),
                menuItem("Analyze Intervention Effect", tabName = "intervention", icon = icon("capsules")),
                menuItem("About", tabName = "readme", icon = icon("book"))
                
    ),
    conditionalPanel(condition = 'input.menu == "exp-model"',
                     actionButton("go", "Run Simulation"),      
                     selectInput("model",
                                 "Select a model to simulate:",
                                 list(SI = "SI_model",
                                      SIR = "SIR_model",
                                      SEIR = "SEIR_model")),
                     sliderInput("beta", 
                                 "Per capita infectious contact rate:",
                                 value = 2,
                                 min = 0, 
                                 max = 50,
                                 step = 0.1),
                     conditionalPanel(condition = "input.model == 'SEIR_model'",
                                      sliderInput("gamma",
                                                  "Recovery parameter:",
                                                  value = 6,
                                                  min = 0,
                                                  max = 300,
                                                  step = 1)),
                    
                     
                     conditionalPanel(condition = "input.model == 'SEIR_model' || input.model == 'SIR_model'",
                                      sliderInput("tau",
                                                  "Infectious period in months:",
                                                  value = 3,
                                                  min = 0,
                                                  max = 150,
                                                  step = 1)
                     ),
                       radioButtons(
                       inputId = "tfinal", label = "Total time for the simulation:", 
                       choices = c(10, 100, 200),
                       selected = 10,
                       inline = TRUE)),
    hr(),
    helpText("Developed by: ",
             br(),
             a("Amos Okutse", href = "www.brown.edu"),
             br(),
             a("Yingjie Zhou", href= "www.brown.edu"),
             br(),
             a("Kyla Finlayson", href = "www.brown.edu"),
             br(),
             "Powered by",
             br(),
             a("Shiny by RStudio", href = "https://shiny.rstudio.com/"),
             style = "padding-left:1em; padding-right:1em;position:absolute;")
    
  ),
  
  dashboardBody(
    tabItems(
      tabItem(tabName = "exp-model",
              fluidPage(
                
                fluidRow(
                  tabBox(
                    width = 12,
                    height = "800px",
                    title = "Explore Model Dynamics", 
                    side = "right",
                    tabPanel(title = "Trajectories",
                             plotlyOutput("plot", width = "100%", height = "650px") %>% 
                               withSpinner() )
                  )),
                fluidRow(
                  tabBox(
                    width = 12,
                    title = "Simulated Model Dynamics", 
                    side = "right",
                    tabPanel(title = "Trajectories",
                             DT::dataTableOutput("model_sim_results") %>% 
                               withSpinner()) #,
                    #tabPanel(title="Download Data", )
                  )
                )
              )
      ),
      #here is where the information on the "intervention" tab goes
      tabItem(tabName = "intervention",
              fluidPage(
        fluidRow(
          tabBox(
          width = 12,
          height = "800px",
          title = "Explore the effect of interventions on recorded infection cases", 
          side = "right",
          tabPanel(title = "Intervention Trajectories",
                   plotlyOutput("interventionplot", width = "100%", height = "650px") %>% 
                     withSpinner()
          ))
      ))),
      #here is where the rmarkdown file with the about information goes (should be named README.md) 
      #uncomment after adding the file to avoid error
      tabItem(tabName = "readme"),
             # includeMarkdown("README.md"))
      
      #here is where details on our homepage go...we'll think about what to put here 
      #later!! any ideas??
      tabItem(tabName = "home",
              fluidRow(
                h1("We need to make this appealing and set it \n as the homepage of our app with 
                   appealing imagery, information and so forth.")
              ))
)
),
skin = "purple"
)

server <- function(input, output) { 
  
} 

# Run the application 
shinyApp(ui = ui, server = server)
